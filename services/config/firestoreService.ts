import { db } from "./firebaseConfig"; // ‚úÖ Helyes import√°l√°s
import {
  doc,
  setDoc,
  getDoc,
  updateDoc,
} from "firebase/firestore";

/**
 * üîπ Felhaszn√°l√≥i adatok ment√©se Firestore-ba (ha m√©g nincs, l√©trehozza)
 */
export const saveUserData = async (
  userUid: string,
  data: any
): Promise<void> => {
  try {
    await setDoc(doc(db, "users", userUid), data, { merge: true });
    console.log("‚úÖ Felhaszn√°l√≥i adatok elmentve Firestore-ba.");
  } catch (error) {
    console.error("‚ùå Hiba t√∂rt√©nt a felhaszn√°l√≥i adatok ment√©sekor:", error);
    throw error;
  }
};

/**
 * üîπ Felhaszn√°l√≥i adatok lek√©r√©se Firestore-b√≥l
 */
export const loadUserData = async (userUid: string): Promise<any> => {
  try {
    const snapshot = await getDoc(doc(db, "users", userUid));
    if (snapshot.exists()) {
      return snapshot.data();
    } else {
      console.log("‚ö†Ô∏è Nincs adat a felhaszn√°l√≥hoz!");
      return null;
    }
  } catch (error) {
    console.error("‚ùå Hiba t√∂rt√©nt a felhaszn√°l√≥i adatok lek√©r√©sekor:", error);
    throw error;
  }
};

/**
 * üîπ √öj milestone hozz√°ad√°sa a felhaszn√°l√≥ Firestore adat√°hoz (nem alkollekci√≥!)
 */
export const saveMilestone = async (
  userUid: string,
  milestone: { id: string; title: string }
): Promise<void> => {
  try {
    const userRef = doc(db, "users", userUid);
    const userSnap = await getDoc(userRef);
    
    if (userSnap.exists()) {
      const userData = userSnap.data();
      const updatedMilestones = userData.milestones
        ? [...userData.milestones, milestone]
        : [milestone];

      await updateDoc(userRef, { milestones: updatedMilestones });
      console.log("‚úÖ Milestone hozz√°adva.");
    } else {
      console.log("‚ö†Ô∏è A felhaszn√°l√≥ nem l√©tezik Firestore-ban!");
    }
  } catch (error) {
    console.error("‚ùå Hiba t√∂rt√©nt a milestone ment√©sekor:", error);
    throw error;
  }
};

/**
 * üîπ Milestone-ok lek√©r√©se a Firestore-b√≥l
 */
export const loadMilestones = async (userUid: string): Promise<any[]> => {
  try {
    const userRef = doc(db, "users", userUid);
    const userSnap = await getDoc(userRef);

    if (userSnap.exists()) {
      return userSnap.data().milestones || [];
    } else {
      console.log("‚ö†Ô∏è Nincs milestone adat!");
      return [];
    }
  } catch (error) {
    console.error("‚ùå Hiba t√∂rt√©nt a milestone-ok lek√©r√©sekor:", error);
    throw error;
  }
};
